<div class='form'>
<%= form_for @user_album do |f| -%>
  <%= f.fields_for :album do |builder| %>
    <div class='form_row'>
      <%= builder.label :composer %>
      <%= builder.select :composer_id, Composer.find(:all, :order => :name).collect{|composer| [composer.name, composer.id]} %>
    </div>
    <div class='form_row'>
      <%= builder.label :obra_type %>
      <%= builder.select :obra_type_id, ObraType.find(:all, :order => :name).collect{|obra_type| [obra_type.name, obra_type.id] } %>
    </div>
    <div class='form_row'>
      <%= builder.label :name %>
      <%= builder.text_field :name, :class => :text %>
    </div>
    <div class='form_row'>
      <%= builder.label :music_tone %>
      <%= builder.text_field :music_tone, :class => :text %>
    </div>
    <div class='form_row'>
      <%= builder.label :obra_number %>
      <%= builder.text_field :number, :class => :text %>
    </div>
    <div class='form_row'>
      <%= builder.label :opus_number %>
      <%= builder.text_field :opus_number, :class => :text %>
    </div>
    <div class='form_row'>
      <%= builder.label :instrument %>
      <%= builder.select :instrument_id, Instrument.find(:all, :order => :name).collect{|instrument| [instrument.name, instrument.id] } %>
    </div>
    <div class='form_row'>
      <%= builder.label :solist %>
      <%= builder.select :solist_id, Solist.find(:all, :order => :name).collect{|solist| [solist.name, solist.id] } %>
    </div>
    <div class='form_row'>
      <%= builder.label :director %>
      <%= builder.select :director_id, Director.find(:all, :order => :name).collect{|director| [director.name, director.id] } %>
    </div>
    <div class='form_row'>
      <%= builder.label :orchestra %>
      <%= builder.select :orchestra_id, Orchestra.find(:all, :order => :name).collect{|orchestra| [orchestra.name, orchestra.id] } %>
    </div>
  <% end -%>

  <div class='form_row'>
    <%= f.label :cd_number %>
    <%= f.text_field :cd_number, :class => :text %>
  </div>

  <div class='form_row'>
    <%= f.label :location %>
    <%= f.text_field :location, :class => :text %>
  </div>

  <div class='form_row'>
    <%= f.label :favorite %>
    <%= f.check_box :favorite, :class => :text %>
  </div>

  <div class='form_row_submit'>
    <%= f.submit :class => 'button'%>
  </div>
<% end -%>
</div>

<script type="text/javascript" language="javascript" charset="utf-8">
// <![CDATA[
(function( $ ) {
    $.widget( "ui.combobox", {
      _create: function() {
        var self = this,
          select = this.element.hide(),
          selected = select.children( ":selected" ),
          value = selected.val() ? selected.text() : "";
        var input = this.input = $( "<input>" )
          .insertAfter( select )
          .val( value )
          .autocomplete({
            delay: 0,
            minLength: 0,
            source: function( request, response ) {
              var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
              response( select.children( "option" ).map(function() {
                var text = $( this ).text();
                if ( this.value && ( !request.term || matcher.test(text) ) )
                  return {
                    label: text.replace(
                      new RegExp(
                        "(?![^&;]+;)(?!<[^<>]*)(" +
                        $.ui.autocomplete.escapeRegex(request.term) +
                        ")(?![^<>]*>)(?![^&;]+;)", "gi"
                      ), "<strong>$1</strong>" ),
                    value: text,
                    option: this
                  };
              }) );
            },
            select: function( event, ui ) {
              ui.item.option.selected = true;
              self._trigger( "selected", event, {
                item: ui.item.option
              });
            },
            change: function( event, ui ) {
              if ( !ui.item ) {
                var matcher = new RegExp( "^" + $.ui.autocomplete.escapeRegex( $(this).val() ) + "$", "i" ),
                  valid = false;
                select.children( "option" ).each(function() {
                  if ( $( this ).text().match( matcher ) ) {
                    this.selected = valid = true;
                    return false;
                  }
                });
                if ( !valid ) {
                  // remove invalid value, as it didn't match anything
                  $( this ).val( "" );
                  select.val( "" );
                  input.data( "autocomplete" ).term = "";
                  return false;
                }
              }
            }
          })
          .addClass( "ui-widget ui-widget-content ui-corner-left" );

        input.data( "autocomplete" )._renderItem = function( ul, item ) {
          return $( "<li></li>" )
            .data( "item.autocomplete", item )
            .append( "<a>" + item.label + "</a>" )
            .appendTo( ul );
        };

        this.button = $( "<button type='button'>&nbsp;</button>" )
          .attr( "tabIndex", -1 )
          .attr( "title", "Show All Items" )
          .insertAfter( input )
          .button({
            icons: {
              primary: "ui-icon-triangle-1-s"
            },
            text: false
          })
          .removeClass( "ui-corner-all" )
          .addClass( "ui-corner-right ui-button-icon" )
          .click(function() {
            // close if already visible
            if ( input.autocomplete( "widget" ).is( ":visible" ) ) {
              input.autocomplete( "close" );
              return;
            }

            // pass empty string as value to search for, displaying all results
            input.autocomplete( "search", "" );
            input.focus();
          });
      },

      destroy: function() {
        this.input.remove();
        this.button.remove();
        this.element.show();
        $.Widget.prototype.destroy.call( this );
      }
    });
  })( jQuery );

  $(function() {
    $("#user_album_album_attributes_obra_type_id").combobox();
    $("#user_album_album_attributes_composer_id").combobox();
    $("#user_album_album_attributes_solist_id").combobox();
    $("#user_album_album_attributes_director_id").combobox();
    $("#user_album_album_attributes_orchestra_id").combobox();
    $("#user_album_album_attributes_instrument_id").combobox();
  });
// ]]>
</script>

